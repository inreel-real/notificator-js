!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.Notificator=t():e.Notificator=t()}(this,(()=>(()=>{"use strict";var e={d:(t,n)=>{for(var s in n)e.o(n,s)&&!e.o(t,s)&&Object.defineProperty(t,s,{enumerable:!0,get:n[s]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},t={};e.r(t),e.d(t,{default:()=>s});var n=function(){return n=Object.assign||function(e){for(var t,n=1,s=arguments.length;n<s;n++)for(var o in t=arguments[n])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e},n.apply(this,arguments)};const s=function(){function e(e,t){void 0===t&&(t={}),this.apiKey=null,this.webSocketProtocol=process.env.PROTOCOL||"wss",this.webSocketHost=process.env.HOST||"notificator-service-l2oj2.ondigitalocean.app",this.socketInstance=null,this.channels={},this.callbacks={},this.apiKey=e,this.callbacks=n(n({},this.callbacks),t)}return e.prototype.connect=function(){this.initInstance(),this.addEvents()},e.prototype.disconnect=function(){this.socketInstance&&(this.socketInstance.close(),this.removeEvents(),this.socketInstance=null,this.channels={})},e.prototype.subscribe=function(e,t){void 0===t&&(t=null),t&&(this.channels[e]?this.channels[e].push(t):this.channels[e]=[t]),this.socketInstance.send(JSON.stringify({cmd:"sub",name:e}))},e.prototype.unsubscribe=function(e,t){void 0===t&&(t=null),this.channels[e]&&(t&&(this.channels[e]=this.channels[e].filter((function(e){return e!==t}))),t&&this.channels[e].length||(delete this.channels[e],this.socketInstance.send(JSON.stringify({cmd:"unsub",name:e}))))},e.prototype.unsubscribeAllChannels=function(){this.channels={},this.socketInstance.send(JSON.stringify({cmd:"unsub"}))},e.prototype.initInstance=function(){this.socketInstance=new WebSocket("".concat(this.webSocketProtocol,"://").concat(this.webSocketHost,"/").concat(this.apiKey))},e.prototype.addEvents=function(){this.socketInstance&&(this.socketInstance.addEventListener("open",this.eventConnected),this.socketInstance.addEventListener("close",this.eventDisconnected),this.socketInstance.addEventListener("error",this.eventError),this.socketInstance.addEventListener("message",this.eventReceiveMessage))},e.prototype.removeEvents=function(){this.socketInstance&&(this.socketInstance.removeEventListener("open",this.eventConnected),this.socketInstance.removeEventListener("close",this.eventDisconnected),this.socketInstance.removeEventListener("error",this.eventError),this.socketInstance.removeEventListener("message",this.eventReceiveMessage))},e.prototype.eventConnected=function(e){this.callbacks.onOpened&&this.callbacks.onOpened(e)},e.prototype.eventDisconnected=function(e){this.callbacks.onClosed&&this.callbacks.onClosed(e)},e.prototype.eventError=function(e){this.callbacks.onError&&this.callbacks.onError(e)},e.prototype.eventReceiveMessage=function(e){var t,n=JSON.parse(e.data);this.callbacks.onMessage&&this.callbacks.onMessage(e),this.callbacks.onMessageResult&&this.callbacks.onMessageResult(n),null===(t=this.channels[n.channel])||void 0===t||t.forEach((function(e){return e(n.data)}))},e}();return t})()));
//# sourceMappingURL=notificator.min.js.map